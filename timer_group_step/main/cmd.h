#ifndef __CMD_H__
#define __CMD_H__
#include "esp_types.h"
#define STAGT_CNT 4
#define ACC_STEP_NUM 300
unsigned short AccStep[ACC_STEP_NUM] = {
4695,4686,4677,4669,4655,4647,4634,4621,4613,4600,
4587,4575,4562,4550,4533,4521,4505,4492,4476,4460,
4444,4429,4409,4394,4374,4359,4340,4322,4299,4281,
4259,4237,4216,4195,4174,4149,4129,4105,4078,4055,
4029,4003,3978,3953,3925,3897,3870,3840,3811,3782,
3751,3720,3690,3660,3628,3595,3564,3531,3497,3463,
3429,3394,3360,3324,3289,3253,3218,3183,3145,3109,
3071,3034,2998,2960,2922,2885,2847,2811,2772,2735,
2697,2660,2622,2584,2546,2509,2472,2434,2397,2361,
2323,2287,2251,2215,2180,2144,2110,2075,2040,2006,
1972,1939,1906,1874,1842,1810,1779,1748,1718,1687,
1658,1629,1601,1572,1545,1518,1491,1465,1439,1414,
1390,1365,1342,1318,1296,1273,1252,1230,1209,1189,
1169,1149,1130,1112,1094,1076,1059,1042,1025,1009,
993,978,963,949,935,921,908,895,882,870,
858,846,835,823,813,802,792,782,773,763,
754,746,737,729,721,713,705,698,691,684,
677,671,664,658,652,646,641,635,630,625,
620,615,611,606,602,598,593,590,586,582,
578,575,571,568,565,562,559,556,553,550,
548,545,543,540,538,536,534,532,530,528,
526,524,522,520,519,517,516,514,513,511,
510,508,507,506,505,504,503,501,500,499,
498,497,496,496,495,494,493,492,491,491,
490,489,489,488,487,487,486,486,485,485,
484,484,483,483,482,482,481,481,481,480,
480,479,479,479,478,478,478,478,477,477,
477,477,476,476,476,476,475,475,475,475,
475,474,474,474,474,474,474,473,473,473,
473,473,473,473,473,472,472,472,472,472,
};

#define INDEX_MAX (ACC_STEP_NUM-1)


enum {
    STATE_CUT1 = 0,
    STATE_UP    = 1,
    STATE_CON   = 2,
    STATE_CUT2 = 3,
};
enum {
    FINISH = 0,
    UN_FINISH    = 1,
};

typedef struct STInfo{
    char flag;//完成标志
	char dir;//方向
    int res;//剩余步数
    int index;//脚标位置
    int aimIndex;//完成index
    char lastDir;//最终方向
}t_StageInfo;

typedef struct FullInfo{
    int nowPlace;//当前位置
    char nowDir;//当前方向
    char lastDir;//最终方向
    int cutRes;//减速剩余步数/加速已用步数
    int totalStep;//完整曲线步数
    t_StageInfo StageInfo[STAGT_CNT];
}MotorInfo;

void MotorInit(MotorInfo *Motor,char Dir, int Place, int Res);
void UpdateInfo(MotorInfo *Motor,int ArmPlace);
void TimerHandler(MotorInfo *Motor);
void motor_test(void);

extern void timer_example_evt_task(void *arg);
extern void SystemInit(void);

#endif
